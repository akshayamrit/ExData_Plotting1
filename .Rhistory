library(devtools)
install.packages("slidify")
search()
install_github("slidify","ramnathv")
install_github("slidify","ramnathv")
install_github(slidify','ramnathv')
install_github('slidify','ramnathv')
library(devtools)
pkgs <- c('ramnathv/slidifyLibraries', 'ramnathv/slidify')
devtools::install_github(pkgs)
search()
library(slidify)
install.packages("ggplot2")
source("http://bioconductor.org/biocLite.R")
install.packages("BiocManager")
BiocManager::install()
BiocManager::available()
BiocManager::install(c("GenomicFeatures", "AnnotationDbi"))
library(ggplot2)
search()
find.package("devtools")
library(devtools)
find_rtools()
find.package("KernSmooth")
library(KernSmooth)
clear()
m <- matrix(rnorm(25,10), nrow = 5,ncol = 5)
m
solve(m)
library("matlib")
library(matlib)
install.packages("matlib")
matlib::inv(m) == solve(m)
matlib::inv(m)
solve(m)
library(xlsx)
fun(libname, pkgname)
library(openxlsx)
library(xlsx)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre1.8.0_211')
library(rJava)
find.java <- function() {
for (root in c("HLM", "HCU")) for (key in c("Software\\JavaSoft\\Java Runtime Environment",
"Software\\JavaSoft\\Java Development Kit")) {
hive <- try(utils::readRegistry(key, root, 2),
silent = TRUE)
if (!inherits(hive, "try-error"))
return(hive)
}
hive
}
find.java()
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre1.8.0_211')
find.java()
Sys.setenv(JAVA_HOME="C:\Program Files (x86)\Java\jre1.8.0_211")
Sys.setenv(JAVA_HOME="C:\\Program Files (x86)\\Java\\jre1.8.0_211")
find.java()
find.java <- function() {
for (root in c("HLM", "HCU")) for (key in c("Software\\JavaSoft\\Java Runtime Environment",
"Software\\JavaSoft\\Java Development Kit")) {
hive <- try(utils::readRegistry(key, root, 2),
silent = TRUE)
if (!inherits(hive, "try-error"))
return(hive)
}
hive
}
find.java()
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre1.8.0_211')
find.java()
library(datasets)
hist(airquality$Ozone)
?bg
??bg
library(datasets)
with(airquality, plot(Wind,Ozone))
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City"))
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City"))
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "blue"))
?with
?plot
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City", type = "n"))
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "blue"))
with(subset(airquality, Month != 5), points(Wind, Ozone, col = "red"))
legend("topright", pch = 1, col = c("blue", "red"), legend = c("May", "Other Months"))
setwd("~/datasciencecoursera/Exploratory Data Analysis/ExData_Plotting1")
powConsumption <- read.table(file = "~/household_power_consumption.txt",
sep = ";",
skip = grep("^[1-2]/2/2007", readLines("~/household_power_consumption.txt"))-1,
nrows = 2880)
colnames(powConsumption) <- colnames(read.table(file = "~/household_power_consumption.txt", sep = ";", nrows = 1, header = T))
hhist(powConsumption$Global_active_power)
hist(powConsumption$Global_active_power)
dev.off()
?hist
hist(powConsumption$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
hist(powConsumption$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
?dev.copy
?dev.print
dev.copy(device = png, filename = 'myFigure/Plot1.png', width = 480, height = 480)
dev.copy(device = png, filename = 'Plot1.png', width = 480, height = 480)
dev.off()
dev.cur()
dev.off()
# Plot 1
## Load data for 2 days
powConsumption <- read.table(file = "~/household_power_consumption.txt",
sep = ";",
skip = grep("^[1-2]/2/2007", readLines("~/household_power_consumption.txt"))-1,
nrows = 2880)
## Naming columns
colnames(powConsumption) <- colnames(read.table(file = "~/household_power_consumption.txt", sep = ";", nrows = 1, header = T))
head(powConsumption)
powConsumption$Date <- as.Date(powConsumption$Date, "%d/%m/%Y")
with(powConsumption, plot(weekdays(Date, "%Y-%m-%d")), Global_active_power)
with(powConsumption, plot(weekdays(Date, "%Y-%m-%d"), Global_active_power))
with(powConsumption, plot(weekdays(powConsumption$Date, "%Y-%m-%d"), Global_active_power))
plot(powConsumption$Date, powConsumption$Global_active_power)
dev.off()
library(tidyr)
library(readr)
library(dplyr)
mutate(powConsumption, Date_Time = paste(Date, Time))
powConsumption <- powConsumption %>% mutate(Date/Time = paste(Date, Time))
powConsumption <- powConsumption %>% mutate(Date_Time = paste(Date, Time))
powConsumption$Date_Time <- strptime(powConsumption$Date_Time "%Y-%m-%d %H:%M:%S")
powConsumption$Date_Time <- strptime(powConsumption$Date_Time "%Y-%m-%d %H:%M:%s")
powConsumption$Date_Time <- strptime(powConsumption$Date_Time, "%Y-%m-%d %H:%M:%S")
with(powConsumption, plot(Date_Time, Global_active_power))
?plot
with(powConsumption, plot(Date_Time, Global_active_power, type = "l"))
with(powConsumption, plot(Date_Time, Global_active_power, type = "l", xlab = NULL, ylab = "Global Active Power (kilowatts)"))
dev.off()
with(powConsumption, plot(Date_Time, Global_active_power, type = "l", xlab = NULL, ylab = "Global Active Power (kilowatts)"))
with(powConsumption, plot(Date_Time, Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)"))
